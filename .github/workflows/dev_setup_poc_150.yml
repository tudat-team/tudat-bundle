name: Dev setup PoC 150

# The workflow is triggered manually from github web interface. It does the following:
# 1. clone tudat-bundle, fetch git submodules, checkout branch feature/150-poc-docstrings
# 2. setup conda environment using mamba using the environment file environment.yml
# 3. cd tudatpy/
# 4. checkout branch feature/150-poc-docstrings of tudatpy git submodule
# 5. cd ..
# 6. bash setup build and test script
# 7. cd tudatpy/docs
# 8. Run "make html"

on:
  workflow_dispatch:


jobs:
  build-and-test-poc-150:

    env:
        CACHE_NUMBER: 0

    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            label: win-64
            path_conda_env: C:\Miniconda3\envs\tudat
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            label: linux-64
            path_conda_env: /usr/share/miniconda3/envs/tudat
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
            label: osx-64
            path_conda_env: /Users/runner/miniconda3/envs/tudat
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: gcc
          - os: macos-latest
            c_compiler: cl
          - os: ubuntu-latest
            c_compiler: clang

    steps:

    - name: Checkout tudat-bundle
      # Checkout the tudat-bundle repository and fetch the git submodules. The repository is checked out to the default branch.
      uses: actions/checkout@v4
      with:
        submodules: recursive
        ref: feature/150-poc-docstrings

    - name: Setup conda environment using mamba
        # This step sets up a conda environment using mamba, a faster alternative to conda. It creates an empty conda environment with the name 'tudat' and activates it. The environment is created using the latest version of Mambaforge, a conda distribution that includes mamba.
      uses: conda-incubator/setup-miniconda@v3
      with:
           miniforge-variant: Mambaforge
           miniforge-version: latest
           activate-environment: tudat-bundle
           use-mamba: true


    - name: Get date
        # Get the current date and time in UTC format. This step is used to create a unique cache key for the conda environment cache by appending the date to the cache key.
        # GitHub cache action doucmentation recommends refreshing the cache every 24 hours to avoid inconsistencies of package versions between the CI pipeline and local installations. This is ensured by appending the date to the cache key.See https://github.com/marketplace/actions/setup-miniconda#caching-environments for more detail.
      id: get-date
      run: echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
      shell: bash


    - name: Cache conda environment
        # Cache the conda environment to avoid re-installing the same packages every time the workflow runs. The cache key is based on the environment.yml file, the operating system, and the date. The cache is restored if the cache key matches the cache key of the previous run.
      uses: actions/cache@v4
      with:
            path: ${{ matrix.path_conda_env }}
            key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}-${{steps.get-date.outputs.today}}
      id: cache


    - name: Create conda environment from environment.yml
        # Update the tudat conda environment created using the environment.yml file if the cache is not restored
      run: mamba env update -n tudat-bundle -f environment.yml
      if: steps.cache.outputs.cache-hit != 'true'


    - name: Download tudat resources data files for Linux and MacOS
        # The data files in tudat-resources are downloaded upon the installation of
        # the tudat-resources conda package in the previous step, but the data files are
        # not cached by the cache action. When the cache is hit, the update environment
        # step is skipped, skipping the installation of the tudat-resources package,
        # thereby skipping the download of the data files. Therefore, the data files must
        # be downloaded manually when the cache is hit.
        # This step downloads the data files in the tudat-resources package by running
        # the post-link scripts in https://github.com/tudat-team/tudat-resources-feedstock/blob/master/recipe/
      if: (runner.os == 'Linux' || runner.os == 'MacOS') && steps.cache.outputs.cache-hit == 'true'
      run: bash -c "$(curl -fsSL https://raw.githubusercontent.com/tudat-team/tudat-resources-feedstock/master/recipe/post-link.sh)"


    - name: Download tudat-resources data files for Windows
      if: runner.os == 'Windows' && steps.cache.outputs.cache-hit == 'true'
      run: cmd /c "curl -fsSL https://raw.githubusercontent.com/tudat-team/tudat-resources-feedstock/master/recipe/post-link.bat | cmd"


    - name: Restore cached compilation results
        # This third party action will setup ccache on the runner and restore any previously saved cache. Caches are saved automatically by the action after a build.
      uses: hendrikmuhs/ccache-action@v1.2.12
      with:
          key: ${{ matrix.os }}-${{ matrix.build_type }}

    - name: Checkout tudatpy poc branch
      run: |
        cd tudatpy/
        git checkout feature/150-poc-docstrings
        cd ..
      shell: bash


    - name: Build tudat and tudatpy
      run: bash setup build
      shell: bash


    - name: Install tudat and tudatpy in conda environment
      run: bash setup install
      shell: bash


    - name: build API docs
      run: |
            cd tudatpy/docs
            make html
      shell: bash


